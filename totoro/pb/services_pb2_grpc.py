# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from totoro.pb import doc_pb2 as totoro_dot_pb_dot_doc__pb2
from totoro.pb import services_pb2 as totoro_dot_pb_dot_services__pb2


class RAGCoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EmbeddingDoc = channel.unary_unary(
                '/totoro.RAGCoreService/EmbeddingDoc',
                request_serializer=totoro_dot_pb_dot_services__pb2.EmbeddingRequest.SerializeToString,
                response_deserializer=totoro_dot_pb_dot_services__pb2.EmbeddingResponse.FromString,
                )
        self.ReankingDoc = channel.unary_unary(
                '/totoro.RAGCoreService/ReankingDoc',
                request_serializer=totoro_dot_pb_dot_services__pb2.ReankingRequest.SerializeToString,
                response_deserializer=totoro_dot_pb_dot_services__pb2.ReankingResponse.FromString,
                )
        self.BuildQuery = channel.unary_unary(
                '/totoro.RAGCoreService/BuildQuery',
                request_serializer=totoro_dot_pb_dot_services__pb2.QueryBuildRequest.SerializeToString,
                response_deserializer=totoro_dot_pb_dot_services__pb2.QueryBuildResponse.FromString,
                )
        self.ReadEmbeddingProgress = channel.unary_unary(
                '/totoro.RAGCoreService/ReadEmbeddingProgress',
                request_serializer=totoro_dot_pb_dot_services__pb2.EmbeddingProgressRequest.SerializeToString,
                response_deserializer=totoro_dot_pb_dot_doc__pb2.DocDegreeProgress.FromString,
                )
        self.PreQuestion = channel.unary_unary(
                '/totoro.RAGCoreService/PreQuestion',
                request_serializer=totoro_dot_pb_dot_services__pb2.PreQuestionRequest.SerializeToString,
                response_deserializer=totoro_dot_pb_dot_services__pb2.PreQuestionResponse.FromString,
                )


class RAGCoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EmbeddingDoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReankingDoc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadEmbeddingProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreQuestion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RAGCoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EmbeddingDoc': grpc.unary_unary_rpc_method_handler(
                    servicer.EmbeddingDoc,
                    request_deserializer=totoro_dot_pb_dot_services__pb2.EmbeddingRequest.FromString,
                    response_serializer=totoro_dot_pb_dot_services__pb2.EmbeddingResponse.SerializeToString,
            ),
            'ReankingDoc': grpc.unary_unary_rpc_method_handler(
                    servicer.ReankingDoc,
                    request_deserializer=totoro_dot_pb_dot_services__pb2.ReankingRequest.FromString,
                    response_serializer=totoro_dot_pb_dot_services__pb2.ReankingResponse.SerializeToString,
            ),
            'BuildQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildQuery,
                    request_deserializer=totoro_dot_pb_dot_services__pb2.QueryBuildRequest.FromString,
                    response_serializer=totoro_dot_pb_dot_services__pb2.QueryBuildResponse.SerializeToString,
            ),
            'ReadEmbeddingProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadEmbeddingProgress,
                    request_deserializer=totoro_dot_pb_dot_services__pb2.EmbeddingProgressRequest.FromString,
                    response_serializer=totoro_dot_pb_dot_doc__pb2.DocDegreeProgress.SerializeToString,
            ),
            'PreQuestion': grpc.unary_unary_rpc_method_handler(
                    servicer.PreQuestion,
                    request_deserializer=totoro_dot_pb_dot_services__pb2.PreQuestionRequest.FromString,
                    response_serializer=totoro_dot_pb_dot_services__pb2.PreQuestionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'totoro.RAGCoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RAGCoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EmbeddingDoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/totoro.RAGCoreService/EmbeddingDoc',
            totoro_dot_pb_dot_services__pb2.EmbeddingRequest.SerializeToString,
            totoro_dot_pb_dot_services__pb2.EmbeddingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReankingDoc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/totoro.RAGCoreService/ReankingDoc',
            totoro_dot_pb_dot_services__pb2.ReankingRequest.SerializeToString,
            totoro_dot_pb_dot_services__pb2.ReankingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuildQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/totoro.RAGCoreService/BuildQuery',
            totoro_dot_pb_dot_services__pb2.QueryBuildRequest.SerializeToString,
            totoro_dot_pb_dot_services__pb2.QueryBuildResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadEmbeddingProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/totoro.RAGCoreService/ReadEmbeddingProgress',
            totoro_dot_pb_dot_services__pb2.EmbeddingProgressRequest.SerializeToString,
            totoro_dot_pb_dot_doc__pb2.DocDegreeProgress.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreQuestion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/totoro.RAGCoreService/PreQuestion',
            totoro_dot_pb_dot_services__pb2.PreQuestionRequest.SerializeToString,
            totoro_dot_pb_dot_services__pb2.PreQuestionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
